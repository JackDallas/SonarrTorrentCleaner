name: Create Release With Assets

on:
  push:
    tags:
      - 'v*'

jobs:
  # Create all builds for various platforms
  artifacts:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        targets: [ {os : 'windows', arch: 'amd64'}, {os: 'linux', arch: 'arm64' }, {os: 'linux', arch: 'amd64' }]

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
      with:
        go-version: '1.17'

    - name: Install dependencies
      run: go version

    - name: Get Tag
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

    - name: Test Tag
      run: |
        echo $RELEASE_VERSION
        echo ${{ env.RELEASE_VERSION }}

    - name: Build
      run: |
        GOOS=${{ matrix.targets.os }} GOARCH=${{ matrix.targets.arch }} make
        zip SonarrTorrentCleaner_${{ env.RELEASE_VERSION }}-${{ matrix.targets.os }}-${{ matrix.targets.arch }}.zip build/
    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: SonarrTorrentCleaner_${{ env.RELEASE_VERSION }}-${{ matrix.targets.os }}-${{ matrix.targets.arch }}
        path: SonarrTorrentCleaner_${{ env.RELEASE_VERSION }}-${{ matrix.targets.os }}-${{ matrix.targets.arch }}.zip

  # Create the release for the tag
  release:
    runs-on: ubuntu-latest
    needs: artifacts
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

    steps:
    - uses: actions/checkout@v2

    - name: Get Tag
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

    - name: Test Tag
      run: |
        echo $RELEASE_VERSION
        echo ${{ env.RELEASE_VERSION }}

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ env.RELEASE_VERSION }}
        draft: false
        prerelease: false
  # Add all the builds as assets to the release
  add:
    runs-on: ubuntu-latest
    needs: [ artifacts, release ]
    strategy:
      matrix:
        targets: [ {os : 'windows', arch: 'amd64'}, {os: 'linux', arch: 'arm64' }, {os: 'linux', arch: 'amd64' }]

    steps:
    - uses: actions/checkout@v2

    - name: Get Tag
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

    - name: Test Tag
      run: |
        echo $RELEASE_VERSION
        echo ${{ env.RELEASE_VERSION }}
        
    - name: Download Artifact
      uses: actions/download-artifact@v2
      with:
        name: SonarrTorrentCleaner_${{ env.RELEASE_VERSION }}-${{ matrix.targets.os }}-${{ matrix.targets.arch }}

    - name: Upload Artifact to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
      with:
        upload_url: ${{ needs.release.outputs.upload_url }}
        asset_path: ./SonarrTorrentCleaner_${{ env.RELEASE_VERSION }}-${{ matrix.targets.os }}-${{ matrix.targets.arch }}.zip
        asset_name: SonarrTorrentCleaner_${{ env.RELEASE_VERSION }}-${{ matrix.targets.os }}-${{ matrix.targets.arch }}.zip
        asset_content_type: application/zip
