name: Create Release With Assets

on:
  push:
    branches: [ master ]
    tags:
      - 'v*'

jobs:
  # Create all builds for various platforms
  artifacts:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ 'windows', 'linux' ]
        arch: [ 'amd64', 'arm64' ]

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
      with:
        go-version: '1.17'

    - name: Install dependencies
      run: go version

    - name: Create Artifact
      run: |
        GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -o SonarrTorrentCleaner_${{ matrix.os }}-${{ matrix.arch }}
        zip SonarrTorrentCleaner_${{ matrix.os }}-${{ matrix.arch }}.zip -x *.go SonarrTorrentCleaner_${{ matrix.os }}-${{ matrix.arch }}*
    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: SonarrTorrentCleaner_${{ matrix.target.os }}_${{ matrix.target.arch }}
        path: SonarrTorrentCleaner_${{ matrix.target.os }}_${{ matrix.target.arch }}.zip
  # Create the release for the tag
  release:
    runs-on: ubuntu-latest
    needs: artifacts
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

    steps:
    - uses: actions/checkout@v2

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
  # Add all the builds as assets to the release
  add:
    runs-on: ubuntu-latest
    needs: [ artifacts, release ]
    strategy:
      matrix:
        os: [ 'windows', 'linux' ]
        arch: [ 'amd64', 'arm64' ]
    steps:
    - uses: actions/checkout@v2

    - name: Download Artifact
      uses: actions/download-artifact@v2
      with:
        name: SonarrTorrentCleaner_${{ matrix.target.os }}_${{ matrix.target.arch }}

    - name: Upload Artifact to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
      with:
        upload_url: ${{ needs.release.outputs.upload_url }}
        asset_path: ./SonarrTorrentCleaner_${{ matrix.target.os }}_${{ matrix.target.arch }}.zip
        asset_name: SonarrTorrentCleaner_${{ matrix.target.os }}_${{ matrix.target.arch }}.zip
        asset_content_type: application/zip
